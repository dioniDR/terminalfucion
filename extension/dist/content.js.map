{"version":3,"file":"content.js","mappings":";;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0CAA0C;AACxD,cAAc,gDAAgD;AAC9D,cAAc;AACd;AACA,2BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,8BAA8B;AAC7E,8CAA8C,8BAA8B;AAC5E;AACA;AACA;AACA;AACA,gDAAgD,qBAAqB;AACrE,iDAAiD,sBAAsB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://extension/./src/content.ts"],"sourcesContent":["\"use strict\";\nclass TerminalOverlay {\n    constructor() {\n        this.container = document.createElement('div');\n        this.header = document.createElement('div');\n        this.iframe = document.createElement('iframe');\n        this.resizer = document.createElement('div');\n        this.isDragging = false;\n        this.isResizing = false;\n        this.dragOffset = { x: 0, y: 0 };\n        this.initialSize = { x: 0, y: 0 };\n        this.isMaximized = false;\n        this.createContainer();\n        this.createHeader();\n        this.createIframe();\n        this.createResizer();\n        this.setupEventListeners();\n    }\n    createContainer() {\n        this.container.className = 'terminal-fusion-overlay';\n        this.container.style.cssText = `\n      position: fixed;\n      top: 20%;\n      left: 20%;\n      width: 800px;\n      height: 600px;\n      background: #1a1b26;\n      border: 1px solid #2f3242;\n      border-radius: 8px;\n      box-shadow: 0 8px 24px rgba(0,0,0,0.2);\n      z-index: 999999;\n      overflow: hidden;\n      resize: both;\n    `;\n    }\n    createHeader() {\n        this.header.className = 'terminal-fusion-header';\n        this.header.style.cssText = `\n      height: 32px;\n      background: #16161e;\n      padding: 0 12px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      cursor: move;\n      user-select: none;\n    `;\n        const title = document.createElement('span');\n        title.textContent = 'Terminal Fusion';\n        title.style.cssText = `\n      color: #7aa2f7;\n      font-family: system-ui, -apple-system, sans-serif;\n      font-size: 14px;\n    `;\n        const controls = document.createElement('div');\n        controls.style.display = 'flex';\n        const buttons = [\n            { text: '−', action: () => this.minimize() },\n            { text: '□', action: () => this.toggleMaximize() },\n            { text: '×', action: () => this.close() }\n        ];\n        buttons.forEach(({ text, action }) => {\n            const button = document.createElement('button');\n            button.textContent = text;\n            button.style.cssText = `\n        background: none;\n        border: none;\n        color: #7aa2f7;\n        font-size: 16px;\n        padding: 0 8px;\n        cursor: pointer;\n        height: 32px;\n      `;\n            button.onmouseover = () => {\n                button.style.background = 'rgba(122, 162, 247, 0.1)';\n            };\n            button.onmouseout = () => {\n                button.style.background = 'none';\n            };\n            button.onclick = action;\n            controls.appendChild(button);\n        });\n        this.header.appendChild(title);\n        this.header.appendChild(controls);\n    }\n    createIframe() {\n        this.iframe.src = 'http://localhost:5173';\n        this.iframe.style.cssText = `\n      width: 100%;\n      height: calc(100% - 32px);\n      border: none;\n      background: #1a1b26;\n    `;\n    }\n    createResizer() {\n        this.resizer.style.cssText = `\n      position: absolute;\n      right: 0;\n      bottom: 0;\n      width: 20px;\n      height: 20px;\n      cursor: se-resize;\n    `;\n    }\n    setupEventListeners() {\n        this.header.onmousedown = (e) => {\n            if (e.target === this.header) {\n                this.isDragging = true;\n                const rect = this.container.getBoundingClientRect();\n                this.dragOffset = {\n                    x: e.clientX - rect.left,\n                    y: e.clientY - rect.top\n                };\n            }\n        };\n        this.resizer.onmousedown = (e) => {\n            this.isResizing = true;\n            this.initialSize = {\n                x: this.container.offsetWidth,\n                y: this.container.offsetHeight\n            };\n            e.stopPropagation();\n        };\n        document.onmousemove = (e) => {\n            if (this.isDragging) {\n                this.container.style.left = `${e.clientX - this.dragOffset.x}px`;\n                this.container.style.top = `${e.clientY - this.dragOffset.y}px`;\n            }\n            else if (this.isResizing) {\n                const width = this.initialSize.x + (e.clientX - this.initialSize.x);\n                const height = this.initialSize.y + (e.clientY - this.initialSize.y);\n                this.container.style.width = `${Math.max(400, width)}px`;\n                this.container.style.height = `${Math.max(300, height)}px`;\n            }\n        };\n        document.onmouseup = () => {\n            this.isDragging = false;\n            this.isResizing = false;\n        };\n    }\n    minimize() {\n        this.container.style.height = '32px';\n        this.iframe.style.display = 'none';\n    }\n    maximize() {\n        this.container.style.top = '0';\n        this.container.style.left = '0';\n        this.container.style.width = '100%';\n        this.container.style.height = '100%';\n        this.iframe.style.display = 'block';\n    }\n    toggleMaximize() {\n        if (this.isMaximized) {\n            this.container.style.top = '20%';\n            this.container.style.left = '20%';\n            this.container.style.width = '800px';\n            this.container.style.height = '600px';\n        }\n        else {\n            this.maximize();\n        }\n        this.isMaximized = !this.isMaximized;\n    }\n    restore() {\n        this.container.style.height = '600px';\n        this.iframe.style.display = 'block';\n    }\n    close() {\n        this.container.remove();\n    }\n    mount() {\n        document.body.appendChild(this.container);\n        this.container.appendChild(this.header);\n        this.container.appendChild(this.iframe);\n        this.container.appendChild(this.resizer);\n    }\n}\n// Comunicación con el background script\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    if (message.action === 'toggleTerminal') {\n        const terminal = new TerminalOverlay();\n        terminal.mount();\n    }\n});\n"],"names":[],"sourceRoot":""}